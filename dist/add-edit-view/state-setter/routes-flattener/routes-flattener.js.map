{"version":3,"sources":["../../../../tmp/add-edit-view/state-setter/routes-flattener/routes-flattener.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAiB,QAAQ,CAAC;AACvC,OAAO,iBAAiB,MAAM,4BAA4B,CAAC;AAE3D,MAAM,CAAC,OAAO,0BAA0B,MAAM;IACvC,IAAA,sBAAM,EAAE,sCAAc,EAAE,qBAAc,EAAd,mCAAc,EAAE,iBAAU,EAAV,+BAAU,CAAW;IAC7D,IAAA,mBAAe,EAAf,oCAAe,EAAE,2BAAuB,EAAvB,4CAAuB,CAAW;IAExD,CAAC,CAAC,IAAI,CAAC,cAAc,IAAI,MAAM,EAAE,UAAA,KAAK;QACpC,EAAE,CAAA,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,MAAM,CAAC;QACT,CAAC;QAEI,IAAA,iBAAI,EAAE,yBAAQ,EAAE,wBAAiB,EAAE,2BAAS,EAAE,2BAAS,CAAU;QACjE,IAAA,2BAAS,EAAE,mBAAK,CAAU;QAC/B,IAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACtD,IAAA,wCAAqD,EAApD,cAAM,EAAE,aAAK,CAAwC;QAE1D,EAAE,CAAA,CAAC,eAAe,CAAC,CAAC,CAAC;YACnB,SAAS,GAAG,eAAe,CAAC;QAC9B,CAAC;QAED,IAAI,SAAS,GAAG;YACd,KAAK,OAAA;YACL,KAAK,OAAA;YACL,MAAM,QAAA;YACN,SAAS,WAAA;YACT,SAAS,WAAA;YACT,IAAI,EAAE,QAAQ;YACd,KAAK,EAAE,QAAQ;YACf,OAAO,EAAE,QAAQ;YACjB,QAAQ,EAAE,SAAS;SACpB,CAAC;QAEF,EAAE,CAAA,CAAC,QAAQ,CAAC,CAAC,CAAC;YACZ,EAAE,CAAA,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAC,IAAI,EAAE,EAAE,EAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC1C,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5B,CAAC;YAED,MAAM,CAAC,eAAe,CAAC;gBACrB,MAAM,QAAA;gBACN,OAAO,SAAA;gBACP,SAAS,WAAA;gBACT,eAAe,iBAAA;gBACf,KAAK,EAAE,QAAQ;gBACf,cAAc,EAAE,QAAQ;aACzB,CAAC,CAAC;QACL,CAAC;QAED,EAAE,CAAA,CAAC,SAAS,IAAI,OAAO,CAAC,CAAC,CAAC;YACxB,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC5B,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,SAAS,CAAC;AACnB,CAAC","file":"routes-flattener.js","sourceRoot":"","sourcesContent":["import * as _            from 'lodash';\nimport parentLabelGetter from './_lib/parent-label-getter';\n\nexport default function routesFlattener(params) {\n  let {routes, childrenRoutes, flattened = [], paths = []} = params;\n  let {include = false, universalParent = false} = params;\n  \n  _.each(childrenRoutes || routes, route => {\n    if(route.admin) {\n      return;\n    }\n    \n    let {path, children, default: _default, component, universal} = route;\n    let {endpoints, group} = route;\n    let newPaths = paths.concat(path);\n    let fullPath = [''].concat(_.compact(newPaths)).join('/');\n    let [parent, label] = parentLabelGetter(routes, newPaths);\n    \n    if(universalParent) {\n      universal = universalParent;\n    }\n    \n    let routeData = {\n      label,\n      group,\n      parent,\n      universal,\n      endpoints,\n      path: fullPath,\n      paths: newPaths,\n      default: _default,\n      selected: universal\n    };\n    \n    if(children) {\n      if(!_.filter(children, {path: ''}).length) {\n        flattened.push(routeData);\n      }\n      \n      return routesFlattener({\n        routes, \n        include,\n        flattened,\n        universalParent,\n        paths: newPaths,\n        childrenRoutes: children\n      });\n    }\n    \n    if(component || include) {\n      flattened.push(routeData);\n    }\n  });\n  \n  return flattened;\n}\n"]}