{"version":3,"sources":["../../../tmp/add-edit-view/state-setter/state-setter.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAmB,QAAQ,CAAC;AACzC,OAAO,mBAAmB,MAAM,gCAAgC,CAAC;AACjE,OAAO,eAAe,MAAU,qCAAqC,CAAC;AACtE,OAAO,cAAc,MAAW,qCAAqC,CAAC;AACtE,OAAO,UAAU,MAAe,2BAA2B,CAAC;AAE5D,MAAM,CAAC,OAAO;IACR,IAAA,wBAAmC,EAAlC,YAAG,EAAE,kBAAM,CAAwB;IACnC,IAAA,cAAE,CAAW;IAClB,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAClB,IAAA,qBAAI,CAAc;IACvB,IAAI,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAC,GAAG,EAAE,EAAE,EAAC,CAAC,CAAC;IAEjD,EAAE,CAAA,CAAC,IAAI,CAAC,CAAC,CAAC;QACR,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,EAAC,IAAI,MAAA,EAAC,CAAC,CAAC;IACzB,CAAC;IAED,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,EAAC,GAAG,EAAE,EAAE,EAAC,CAAC,CAAC;IAC1B,IAAI,CAAC,UAAU,GAAG,mBAAmB,CAAC,IAAI,CAAC,CAAC;IAC5C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACnD,IAAI,CAAC,MAAM,GAAG,eAAe,CAAC,EAAC,MAAM,EAAE,IAAI,CAAC,cAAc,EAAC,CAAC,CAAC;IAC7D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAEjB,EAAE,CAAA,CAAC,IAAI,CAAC,CAAC,CAAC;QACR,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;IAE9D,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QACJ,IAAA,sCAAa,CAAwB;QAE1C,EAAE,CAAA,CAAC,aAAa,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAChC,CAAC;IACH,CAAC;IAED,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;AACnC,CAAC","file":"state-setter.js","sourceRoot":"","sourcesContent":["import * as _              from 'lodash';\nimport typeToHttpMethodMap from './_lib/type-to-http-method-map';\nimport routesFlattener     from './routes-flattener/routes-flattener';\nimport viewStateMaker      from './view-state-maker/view-state-maker';\nimport dataStater          from './data-stater/data-stater';\n\nexport default function() {\n  let {url, params} = this.route.snapshot;\n  let {id} = params;\n  let type = url[0].path;\n  let {form} = this.form;\n  let role = _.find(this.resource.data, {_id: id});\n  \n  if(form) {\n    _.extend(this, {form});\n  }\n  \n  _.extend(this, {_id: id});\n  this.httpMethod = typeToHttpMethodMap[type];\n  this.originalRoutes = this.guardian.routes('auth');\n  this.routes = routesFlattener({routes: this.originalRoutes});\n  this.view = null;\n  \n  if(role) {\n    dataStater.call(this, role);\n  } \n  \n  this.selectedRoutes = _.filter(this.routes, {selected: true});\n  \n  if(!role) {\n    let [selectedRoute] = this.selectedRoutes;\n    \n    if(selectedRoute) {\n      this.defaulter(selectedRoute);\n    }\n  }\n  \n  this.view = viewStateMaker(type);\n}\n"]}