{"version":3,"sources":["../../../tmp/add-edit-view/toggler/toggler.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAyB,QAAQ,CAAC;AAC/C,OAAO,cAAc,MAAiB,4BAA4B,CAAC;AACnE,OAAO,yBAAyB,MAAM,oCAAoC,CAAC;AAC3E,OAAO,YAAY,MAAmB,+BAA+B,CAAC;AACtE,OAAO,gBAAgB,MAAe,uCAAuC,CAAC;AAE9E,MAAM,CAAC,OAAO,WAAU,KAAK,EAAE,QAAS,EAAE,gBAAwB;IAAxB,iCAAA,EAAA,wBAAwB;IAC3D,IAAA,oBAAM,CAAS;IAEpB,IAAG,KAAK,CAAC,SAAS,EAAE;QAClB,OAAO;KACR;IAED,IAAG,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE;QAC1B,CAAE,yBAAQ,CAAU,CAAC;QACrB,QAAQ,GAAG,CAAC,QAAQ,CAAC;KACtB;IAED,IAAG,CAAC,QAAQ,IAAI,yBAAyB,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE;QACxD,OAAO;KACR;IAED,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,EAAC,QAAQ,UAAA,EAAC,CAAC,CAAC;IAC5B,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;IACtC,gBAAgB,CAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;IAC1C,IAAI,cAAc,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;IACxD,MAAM,CAAC,QAAQ,GAAG,cAAc,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM,CAAC;IAE1D,IAAG,CAAC,gBAAgB,EAAE;QACpB,IAAG,cAAc,CAAC,MAAM,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE;YAC3D,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;SACnC;KACF;IAED,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,EAAC,cAAc,gBAAA,EAAC,CAAC,CAAC;AACnC,CAAC","file":"toggler.js","sourceRoot":"","sourcesContent":["import * as _                    from 'lodash';\nimport defaultChecker            from '../../_lib/default-checker';\nimport selectedDescendantChecker from './_lib/selected-descendant-checker';\nimport groupToggler              from './group-toggler/group-toggler';\nimport relationsToggler          from './relations-toggler/relations-toggler';\n\nexport default function(route, selected?, noDefaultSetting = false) {\n  let {routes} = this;\n\n  if(route.universal) {\n    return;\n  }\n\n  if(_.isUndefined(selected)) {\n    ({selected} = route);\n    selected = !selected;\n  }\n  \n  if(!selected && selectedDescendantChecker(routes, route)) {\n    return;\n  }\n  \n  _.extend(route, {selected});\n  groupToggler(routes, route, selected);\n  relationsToggler(routes, route, selected);\n  let selectedRoutes = _.filter(routes, {selected: true});\n  routes.selected = selectedRoutes.length === routes.length;\n  \n  if(!noDefaultSetting) {\n    if(selectedRoutes.length && !defaultChecker(selectedRoutes)) {\n      this.defaulter(selectedRoutes[0]);\n    }\n  }\n  \n  _.extend(this, {selectedRoutes});\n}\n"]}