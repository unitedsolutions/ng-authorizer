{"version":3,"sources":["../../../../../../tmp/add-edit-view/data-sender/routes-builder/route-tree-builder/empty-route-resolver/empty-route-resolver.ts"],"names":[],"mappings":"AAAA,OAAO,gBAAgB,MAAQ,2BAA2B,CAAC;AAC3D,OAAO,kBAAkB,MAAM,6BAA6B,CAAC;AAE7D,MAAM,CAAC,OAAO,WAAU,KAAK;IAC3B,IAAI,UAAU,GAAG,gBAAgB,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IAEtE,IAAG,CAAC,UAAU,EAAE;QACd,OAAO;KACR;IAEI,IAAA,kCAAU,CAAe;IAC9B,IAAI,eAAe,GAAG,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IAErE,IAAG,eAAe,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE;QAC7C,OAAO,EAAC,IAAI,EAAE,EAAE,EAAC,CAAC;KACnB;IAED,OAAO,EAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,eAAe,CAAC,CAAC,CAAC,EAAC,CAAC;AACpD,CAAC","file":"empty-route-resolver.js","sourceRoot":"","sourcesContent":["import emptyChildGetter   from './_lib/empty-child-getter';\nimport flatChildrenGetter from './_lib/flat-children-getter';\n\nexport default function(paths) {\n  let emptyChild = emptyChildGetter(paths.slice(), this.originalRoutes);\n\n  if(!emptyChild) {\n    return;\n  }\n  \n  let {redirectTo} = emptyChild;\n  let currentChildren = flatChildrenGetter(paths, this.selectedRoutes);\n\n  if(currentChildren.indexOf(redirectTo) !== -1) {\n    return {path: ''};\n  }\n  \n  return {path: '', redirectTo: currentChildren[0]};\n}\n"]}