{"version":3,"sources":["../../../tmp/add-edit-view/_constructor/constructor.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,SAAE,EAAU,SAAA,EAAU,MAAM,eAAA,CAAgB;AACnD,OAAO,EAAA,cAAE,EAAc,MAAY,iBAAA,CAAkB;AACrD,OAAO,EAAA,QAAE,EAAQ,MAAkB,aAAA,CAAc;AACjD,OAAO,EAAA,cAAE,EAAc,MAAY,qBAAA,CAAsB;AACzD,OAAO,EAAA,SAAE,EAAS,MAAiB,eAAA,CAAgB;AACnD,OAAO,EAAA,QAAE,EAAQ,MAAkB,aAAA,CAAc;AAGjD;IAaE,8BACU,QAAkB,EAClB,IAAoB,EACpB,SAAoB,EACpB,KAAqB,EACrB,QAAkB;QAJlB,aAAQ,GAAR,QAAQ,CAAU;QAClB,SAAI,GAAJ,IAAI,CAAgB;QACpB,cAAS,GAAT,SAAS,CAAW;QACpB,UAAK,GAAL,KAAK,CAAgB;QACrB,aAAQ,GAAR,QAAQ,CAAU;IACzB,CAAC;IACC,+BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,8jFA+DT;oBACD,MAAM,EAAE,CAAC,yVAoBR,CAAC;iBACH,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,mCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,QAAQ,GAAG;QAClB,EAAC,IAAI,EAAE,cAAc,GAAG;QACxB,EAAC,IAAI,EAAE,SAAS,GAAG;QACnB,EAAC,IAAI,EAAE,cAAc,GAAG;QACxB,EAAC,IAAI,EAAE,QAAQ,GAAG;KACjB,EAN6F,CAM7F,CAAC;IACK,mCAAc,GAA2C;QAChE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,GAAG,EAAG,EAAE,EAAE;KAC5C,CAAC;IACF,2BAAC;CAxHD,AAwHC,IAAA;SAxHY,oBAAoB","file":"constructor.js","sourceRoot":"","sourcesContent":["import {Component, ViewChild} from '@angular/core';\nimport {ActivatedRoute}       from '@angular/router';\nimport {Guardian}             from 'ng-guardian';\nimport {HttpClientPlus}       from 'ng-http-client-plus';\nimport {DataState}            from 'ng-data-state';\nimport {Notifier}             from 'ng-notifier';\n\n \nexport class AddEditViewComponent {\n  view;\n  routes;\n  httpMethod;\n  originalRoutes;\n  selectedRoutes;\n  setState;\n  resource;\n  _id;\n  remover;\n  changer;\n   form;\n  \n  constructor(\n    private guardian: Guardian,\n    private http: HttpClientPlus, \n    private dataState: DataState,\n    private route: ActivatedRoute,\n    private notifier: Notifier\n  ) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  template: `\n    <h1 class = \"mt-4\">{{view?.title}}</h1>\n    <form #f = \"ngForm\" novalidate>\n      <p class = \"ng-roles-section-title\">\n        <strong>Role Information</strong>\n      </p>\n      <input type = \"hidden\" name = \"_id\" ngModel />\n      <div class=\"form-group row\">\n        <label class=\"col col-md-auto col-form-label\">Role Name: </label>\n        <div class=\"col-4\">\n          <input class=\"form-control\" type=\"text\" name = \"roleName\" ngModel \n          required autocomplete = \"off\" [disabled] = \"view?.inputDisabled\">\n        </div>\n      </div>\n      <div class = \"form-group row\">\n        <label class=\"col col-md-auto col-form-label\">Role Description: </label>\n        <div class=\"col-4\">\n          <input class=\"form-control\" type=\"search\" name = \"roleDescription\" \n          ngModel required autocomplete = \"off\" [disabled] = \"view?.inputDisabled\">\n        </div>\n      </div>\n      <p class = \"ng-roles-section-title\">\n        <strong>Role Actions</strong>\n      </p>\n      <table class = \"table mt-4\" [ngClass] = \"{'table-hover': !view?.isView}\">\n        <thead>\n          <tr>\n            <th class = \"text-center\"><span class = \"fa\" \n            [ngClass] = \"circleClass(routes.selected)\" \n            (click) = \"toggleAll()\"></span></th>\n            <th>Module</th>\n            <th>Application</th>\n            <th>Route</th>\n            <th class = \"text-center\">Default</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor = \"let route of routes\">\n            <td class = \"text-center\">\n              <span class = \"fa\" [ngClass] = \"circleClass(route.selected)\" \n              (click) = \"toggler(route)\"></span>\n            </td>\n            <td>{{route.parent}}</td>\n            <td>{{route.label}}</td>\n            <td>{{route.path}}</td>\n            <td class = \"text-center\">\n              <span class = \"fa\" [ngClass] = \"circleClass(route.default)\" \n              (click) = \"defaulter(route)\"></span>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div class = \"mt-4\">\n        <button *ngIf = \"!view?.isView\" class = \"btn btn-primary\" \n        (click) = \"sendData()\" [disabled] = \"f.invalid || !selectedRoutes?.length\">\n          <strong>{{view?.submitButtonTitle}}</strong>\n        </button>\n        <button type = \"button\" class = \"btn btn-secondary ml-2\" \n        routerLink = \"/roles/list\">\n          <strong>{{view?.cancelButtonTitle}}</strong>\n        </button>    \n      </div>\n    </form>\n  `,\n  styles: [`\n    .fa {\n      font-size: 20px;\n    }\n    input[disabled] {\n      background-color: #fff;\n      cursor: default;\n    }\n    .cursor-hand {\n      cursor: pointer;\n    }\n    .cursor-default {\n      cursor: default;\n    }\n    label {\n      width: 155px;\n    }\n    .ng-roles-section-title {\n      margin: 25px 0 20px;\n    }\n  `]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Guardian, },\n{type: HttpClientPlus, },\n{type: DataState, },\n{type: ActivatedRoute, },\n{type: Notifier, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'form': [{ type: ViewChild, args: ['f', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}