{"version":3,"sources":["../../tmp/list/list.component.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAA,MAAgB,QAAA,CAAS;AACrC,OAAO,EAAA,SAAE,EAAS,MAAU,eAAA,CAAgB;AAC5C,OAAO,EAAA,MAAE,EAAM,MAAa,iBAAA,CAAkB;AAC9C,OAAO,EAAA,QAAE,EAAQ,MAAW,aAAA,CAAc;AAC1C,OAAO,EAAA,SAAE,EAAS,MAAU,eAAA,CAAgB;AAC5C,OAAO,EAAA,QAAE,EAAQ,MAAW,aAAA,CAAc;AAG1C;IAmBE,uBACU,SAAoB,EACpB,QAAkB,EAClB,QAAkB,EAClB,MAAc;QAHd,cAAS,GAAT,SAAS,CAAW;QACpB,aAAQ,GAAR,QAAQ,CAAU;QAClB,aAAQ,GAAR,QAAQ,CAAU;QAClB,WAAM,GAAN,MAAM,CAAQ;QAtBxB,UAAK,GAAG,EAAE,CAAC;IAuBR,CAAC;IAjBI,gCAAQ,GAAhB,UAAiB,OAAO;QACtB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,EAAE;YACnC,OAAO,SAAA;YACP,OAAO,EAAE;gBACP,SAAS,EAAE,MAAM;gBACjB,QAAQ,EAAE,qBAAqB;gBAC/B,IAAI,EAAE,eAAe;aACtB;YACD,UAAU,EAAE,IAAI;SACjB,CAAC,CAAC;IACL,CAAC;IASD,gCAAQ,GAAR;QAAA,iBAkBC;QAjBC,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAEnD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,UAAA,KAAK;YACnD,CAAC,CAAC,MAAM,CAAC,KAAI,EAAE,EAAC,KAAK,OAAA,EAAC,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC;YAC3C,KAAI,CAAC,QAAQ,CAAC,gCAAgC,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,UAAA,MAAM;YACjD,KAAI,CAAC,QAAQ,CAAC,gCAAgC,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,UAAA,MAAM;YAC5C,KAAI,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAW,GAAX;QAAA,iBAIC;QAHC,CAAC,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,UAAA,IAAI;YACvD,KAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IACI,wBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,mpDA0CT;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,4BAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,SAAS,GAAG;QACnB,EAAC,IAAI,EAAE,QAAQ,GAAG;QAClB,EAAC,IAAI,EAAE,QAAQ,GAAG;QAClB,EAAC,IAAI,EAAE,MAAM,GAAG;KACf,EAL6F,CAK7F,CAAC;IACF,oBAAC;CAzGD,AAyGC,IAAA;SAzGY,aAAa","file":"list.component.js","sourceRoot":"","sourcesContent":["import * as _          from 'lodash';\nimport {Component}     from '@angular/core';\nimport {Router}        from '@angular/router';\nimport {Guardian}      from 'ng-guardian';\nimport {DataState}     from 'ng-data-state';\nimport {Notifier}      from 'ng-notifier';\n\n\nexport class ListComponent {\n  roles = [];\n  remover;\n  changer;\n  adder;\n  publisher;\n  \n  private messager(message) {\n    this.notifier.send('roles-messager', {\n      message,\n      classes: {\n        container: 'mt-4',\n        notifier: 'alert alert-warning',\n        icon: 'fa fa-warning'\n      },\n      activeTime: 2500\n    });\n  }\n  \n  constructor(\n    private dataState: DataState, \n    private notifier: Notifier, \n    private guardian: Guardian,\n    private router: Router\n  ) {}\n  \n  ngOnInit() {\n    let resource = this.dataState.getResource('roles');\n\n    this.publisher = resource.onPublish().subscribe(roles => {\n      _.extend(this, {roles});\n    });\n    \n    this.remover = resource.onDelete().subscribe(() => {\n      this.messager('One of the records was deleted');\n    });\n    \n    this.changer = resource.onUpdate().subscribe(record => {\n      this.messager('One of the records was changed');\n    });\n    \n    this.adder = resource.onAdd().subscribe(record => {\n      this.messager('A new record was added');\n    });\n  }\n  \n  ngOnDestroy() {\n    ['publisher', 'remover', 'changer', 'adder'].forEach(type => {\n      this[type].complete();\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  template: `\n    <h1 class = \"mt-4\">Roles</h1>\n    <div class = \"controls mt-4\">\n      <button class = \"btn btn-primary\" routerLink = \"/roles/add\">\n        <strong>Add New Role</strong>\n      </button>\n    </div>\n    <table class = \"table mt-4\" [ngClass] = \"{'table-hover': roles.length}\" >\n      <thead *ngIf = \"roles.length\">\n        <tr>\n          <th>Role Name</th>\n          <th>Role Description</th>\n          <th class = \"text-center\">Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor = \"let role of roles\">\n          <td>{{role.roleName}}</td>\n          <td>{{role.roleDescription}}</td>\n          <td class = \"text-center\">\n            <button class = \"btn btn-secondary btn-sm\" [disabled] = \"!role._id\" \n            [routerLink] = \"['/roles/view/', role._id]\">\n              <span class = \"fa fa-eye\"></span>\n            </button>\n            <button class = \"btn btn-warning btn-sm\" [disabled] = \"!role._id\"\n            [routerLink] = \"['/roles/edit/', role._id]\">\n              <span class = \"fa fa-edit\"></span>\n            </button>\n            <button class = \"btn btn-danger btn-sm\" [disabled] = \"!role._id || role.users\"\n            [routerLink] = \"['/roles', {outlets: {empty: ['delete', role._id]}}]\"\n            skipLocationChange>\n              <span class = \"fa fa-times-circle-o\"></span>\n            </button>\n          </td>\n        </tr>\n        <tr *ngIf = \"!roles.length\">\n          <td colspan = \"3\" class = \"text-center text-muted\">\n            <strong>No roles in the database</strong>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DataState, },\n{type: Notifier, },\n{type: Guardian, },\n{type: Router, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}